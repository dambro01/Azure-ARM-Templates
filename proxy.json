{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"metadata": {
		"description": "Your proxy is preventing successful Guest Agent connectivity.",
		"author": "Ryan McCallum",
		"alias": "RYMCCALL",
		"GitHub": "https://github.com/rjmccallumbigl/Azure-ARM-Templates",
		"Enablement": "https://learn.microsoft.com/en-us/troubleshoot/azure/virtual-machines/windows-azure-guest-agent",
		"deploymentLink": "https://labbox.azurewebsites.net/api/Labbox?url=https://raw.githubusercontent.com/rjmccallumbigl/Azure-ARM-Templates/main/proxy.json"
	},
	"parameters": {
		"adminUsername": {
			"type": "String",
			"maxLength": 20,
			"metadata": {
				"description": "Username for the Virtual Machine."
			}
		},
		"adminPassword": {
			"type": "SecureString",
			"minLength": 12,
			"metadata": {
				"description": "Password for the Virtual Machine."
			}
		},
		"location": {
			"defaultValue": "[resourceGroup().location]",
			"type": "String",
			"metadata": {
				"description": "Location for all resources."
			}
		},
		"vmSize": {
			"defaultValue": "Standard_B2ms",
			"type": "String",
			"metadata": {
				"description": "Default VM Size"
			}
		},
		"storageUri": {
			"defaultValue": "[format('store{0}', uniqueString(resourceGroup().id))]",
			"type": "string",
			"metadata": {
				"description": "Name of storage account For Boot Diagnostics"
			}
		},
		"storageAccountType": {
			"type": "string",
			"defaultValue": "Standard_LRS",
			"metadata": {
				"description": "Storage Account type"
			}
		}
	},
	"variables": {
		"nicName": "myVMNic",
		"addressPrefix": "10.0.0.0/16",
		"subnetName": "Subnet",
		"subnetPrefix": "10.0.0.0/24",
		"subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
		"vmName": "proxyVM",
		"virtualNetworkName": "MyVNET",
		"publicIPAddressName": "myPublicIP",
		"networkSecurityGroupName": "default-NSG"
	},
	"resources": [
		{
			"type": "Microsoft.Network/publicIPAddresses",
			"apiVersion": "2020-08-01",
			"name": "[variables('publicIPAddressName')]",
			"location": "[parameters('location')]",
			"properties": {
				"publicIPAllocationMethod": "Dynamic"
			}
		},
		{
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2020-08-01",
			"name": "[variables('networkSecurityGroupName')]",
			"location": "[parameters('location')]",
			"properties": {
				"securityRules": [
					{
						"name": "default-allow-3389",
						"properties": {
							"priority": 1000,
							"access": "Allow",
							"direction": "Inbound",
							"destinationPortRange": "3389",
							"protocol": "Tcp",
							"sourceAddressPrefix": "*",
							"sourcePortRange": "*",
							"destinationAddressPrefix": "*"
						}
					}
				]
			}
		},
		{
			"type": "Microsoft.Network/virtualNetworks",
			"apiVersion": "2020-08-01",
			"name": "[variables('virtualNetworkName')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
			],
			"properties": {
				"addressSpace": {
					"addressPrefixes": [
						"[variables('addressPrefix')]"
					]
				},
				"subnets": [
					{
						"name": "[variables('subnetName')]",
						"properties": {
							"addressPrefix": "[variables('subnetPrefix')]",
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
							}
						}
					}
				]
			}
		},
		{
			"type": "Microsoft.Network/networkInterfaces",
			"apiVersion": "2020-08-01",
			"name": "[variables('nicName')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[variables('publicIPAddressName')]",
				"[variables('virtualNetworkName')]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"publicIPAddress": {
								"id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
							},
							"subnet": {
								"id": "[variables('subnetRef')]"
							}
						}
					}
				]
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts",
			"apiVersion": "2021-06-01",
			"name": "[parameters('storageUri')]",
			"location": "[parameters('location')]",
			"sku": {
				"name": "[parameters('storageAccountType')]"
			},
			"kind": "StorageV2",
			"properties": {}
		},
		{
			"type": "Microsoft.Compute/virtualMachines",
			"apiVersion": "2020-12-01",
			"name": "[variables('vmName')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[variables('nicName')]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('vmSize')]"
				},
				"osProfile": {
					"computerName": "[variables('vmName')]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "MicrosoftWindowsServer",
						"offer": "WindowsServer",
						"sku": "2019-Datacenter",
						"version": "latest"
					},
					"osDisk": {
						"createOption": "FromImage",
						"managedDisk": {
							"storageAccountType": "StandardSSD_LRS"
						}
					}
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
						}
					]
				},
				"diagnosticsProfile": {
					"bootDiagnostics": {
						"enabled": true,
						"storageUri": "[concat('https://', parameters('storageUri'), '.blob.core.windows.net')]"
					}
				}
			},
			"resources": [
				// {
				// 	"type": "extensions",
				// 	"apiVersion": "2020-12-01",
				// 	"name": "CustomScriptExtension",
				// 	"location": "[parameters('location')]",
				// 	"dependsOn": [
				// 		"[variables('vmName')]"
				// 	],
				// 	"properties": {
				// 		"publisher": "Microsoft.Compute",
				// 		"type": "CustomScriptExtension",
				// 		"typeHandlerVersion": "1.8",
				// 		"autoUpgradeMinorVersion": true,
				// 		"settings": {
				// 			"fileUris": [
				// 				"https://raw.githubusercontent.com/rjmccallumbigl/Azure-ARM-Templates/main/Scripts/gaUninstalled.bat"
				// 			]
				// 		},
				// 		"protectedSettings": {
				// 			"commandToExecute": "[concat('powershell Start-Process gaUninstalled.bat')]"
				// 		}
				// 	}
				// }
			]
		},
		{
			// üëçüèø
			"type": "Microsoft.Compute/virtualMachines/runCommands",
			"apiVersion": "2021-11-01",
			"name": "[concat(variables('vmName'), '/injectRunCommand')]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
			],
			"properties": {
				"source": {
					// "script": "Start-Process powershell -Verb runAs -ArgumentList { if ((Test-Path -LiteralPath 'Registry::\\HKEY_USERS\\S-1-5-18\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Connections') -ne $true) { New-Item 'Registry::\\HKEY_USERS\\S-1-5-18\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Connections' -Force -ea SilentlyContinue };New-ItemProperty -LiteralPath 'Registry::\\HKEY_USERS\\S-1-5-18\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Connections' -Name 'DefaultConnectionSettings' -Value ([byte[]](0x46, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x6f, 0x73, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x3a, 0x38, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)) -PropertyType Binary -Force -ea SilentlyContinue; Restart-Computer -Force;}"
					"script": "Start-Process powershell -Verb runAs -ArgumentList { $proxy = 'C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\Config\\machine.config';((Get-Content -Path $proxy -Raw).replace('</configuration>', '<system.net> <defaultProxy enabled=\"true\" useDefaultCredentials=\"true\"> <proxy usesystemdefault=\"false\" proxyaddress=\"<nowiki>http://corp.contoso.com:8080</nowiki>\" bypassonlocal=\"true\" /> <bypasslist> <add address=\"XYZ\" /> </bypasslist> </defaultProxy> </system.net> </configuration>')) | Set-Content -Path $proxy; Restart-Computer -Force;}"
				},
				"timeoutInSeconds": 60
			}
		}
	],
	"outputs": {}
}

// https://docs.blackberry.com/en/id-comm-collab/blackberry-athoc/blackberry-athoc/7_9/install/post-install-upgrade-config/configure-net-framework-web-proxy
// https://github.com/MicrosoftDocs/MIMDocs/issues/99
// https://learn.microsoft.com/en-us/azure/active-directory/app-proxy/application-proxy-configure-connectors-with-proxy-servers
// https://learn.microsoft.com/en-us/dotnet/framework/configure-apps/file-schema/network/defaultproxy-element-network-settings

// netsh winhttp set proxy http://corp.contoso.com:8080

// "C:\WindowsAzure\Packages\CommonAgentConfig.config"
// ((Get-Content -Path $config -Raw).replace('allowFastTrack="true"', 'allowFastTrack="false"')) | Set-Content -Path $config;

// <configuration>
// $proxy = 'C:\Windows\Microsoft.NET\Framework64\v4.0.30319\Config\machine.config';
// ((Get-Content -Path $proxy -Raw).replace('</configuration>', '<system.net> <defaultProxy enabled="true" useDefaultCredentials="true"> <proxy usesystemdefault="false" proxyaddress="<nowiki>http://corp.contoso.com:8080</nowiki>" bypassonlocal="true" /> <bypasslist> <add address="XYZ" /> </bypasslist> </defaultProxy> </system.net> </configuration>')) | Set-Content -Path $proxy;
